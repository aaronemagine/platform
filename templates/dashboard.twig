{% extends 'includes/main.twig' %}


{% block content %}

    {# — PARAMETERS & DATA — #}
    {% set dayParam = craft.app.request.getParam('day') %}
    {% set dayKey   = dayParam is iterable ? dayParam|first : dayParam ?? 'today' %}
    {% set selectedUserId  = currentUser.id ?? null %}
    {% if not selectedUserId %}
        {% redirect 'index' %}
    {% endif %}

{#     {% set day = craft.app.request.getParam('day')|default('now')|date('Y-m-d') %}
    {% set venueCounts   = craft.emstats.getVenueVisitCounts(day, day, currentUser.id) %}

    {% set movieCounts   = craft.emstats.getMovieVisitCounts(day, day, selectedUserId) %}
    {% set headsetCounts = craft.emstats.getHeadsetVisitCounts(day, day, selectedUserId) %}

{{dump(venueCounts)}}
{{dump(movieCounts)}}
{{dump(headsetCounts)}} #}

    {# Fetch stats from the updated Craft5 service #}
    {% set dailyStats   = craft.emstats.getTodayVisitsByTimeAndLanguage(dayParam, selectedUserId) %}
    {% set dayNavUrls   = craft.emstats.getDayNavigationUrls(dayParam) %}
    {% set languageMap  = craft.emstats.getLanguageMap() %}
    {% set lowercaseStats   = {} %}
    {% set totalDailyVisits = 0 %}

    {# — NORMALISE & AGGREGATE — #}
    {% for time, stats in dailyStats %}
        {% set rowStats = {} %}
        {% for lang, count in stats %}
            {% set rowStats = rowStats | merge({ (lang|lower): count }) %}
            {% set totalDailyVisits = totalDailyVisits + count %}
        {% endfor %}
        {% set lowercaseStats = lowercaseStats | merge({ (time): rowStats }) %}
    {% endfor %}

    {# — SORT & BATCH FOR LAYOUT — #}
    {% set sortedStats     = lowercaseStats|sort %}
    {% set totalItems      = sortedStats|length %}
    {# Compute raw size, then force a minimum of 1 #}
    {% set rawBatchSize    = (totalItems / 2) | round(0, 'ceil') %}
    {% set batchSize       = rawBatchSize > 0 ? rawBatchSize : 1 %}
    {% set batchedStats    = sortedStats | batch(batchSize) %}


    <div class="flex min-h-screen">
      <div class="flex-grow w-full bg-grey-500 p-4">

        <h1 class="text-xl font-bold mb-4 text-white">
          {{ 'Visits per hour'|t }}:
          {{ dayParam
             ? dayParam|date('l, jS F, Y')
             : (craft.app.language == 'fr' ? 'Aujourd&#39;hui' : 'Today')
          }}
          &ndash; ({{ totalDailyVisits }})
        </h1>

        <div class="grid grid-cols-3 gap-4 p-4 border rounded-lg shadow-sm border-gray-700 bg-gray-800 text-white">
          <div class="col-span-3">
            <canvas id="barDayChart"></canvas>
          </div>
        </div>

        <div class="flex justify-between pt-4">
          <a href="{{ dayNavUrls.prevDayUrl }}" class="bg-gray-700 hover:bg-teal-700 text-sm text-white py-2 px-4 rounded">
            {{ 'Prev day'|t }}
          </a>
          <a href="{{ dayNavUrls.nextDayUrl }}" class="bg-gray-700 hover:bg-teal-700 text-sm text-white py-2 px-4 rounded">
            {{ 'Next day'|t }}
          </a>
        </div>

        <div class="grid grid-cols-4 gap-4 mt-4 p-4 border rounded-lg shadow-sm border-gray-700 bg-gray-800 text-white">
          {% for batch in batchedStats %}
            <div class="col-span-2">
              <table class="w-full bg-gray-800 border border-gray-700">
                <thead>
                  <tr>
                    <th class="px-4 py-2 bg-gray-700 text-left text-sm font-medium text-gray-300 uppercase tracking-wider">
                      {{ 'Hour'|t }}
                    </th>
                    <th class="px-4 py-2 bg-gray-700 text-right text-sm font-medium text-gray-300 uppercase tracking-wider">
                      {{ 'Visits'|t }}
                    </th>
                  </tr>
                </thead>
                <tbody>
                  {% for time, stats in batch %}
                    {% set rowTotal = stats|reduce((sum, v) => sum + v, 0) %}
                    <tr class="{{ loop.index0 is even ? 'bg-gray-800' : 'bg-gray-700' }}">
                      <td class="px-4 py-2 border-b border-gray-700 text-sm text-gray-300">{{ time }}</td>
                      <td class="px-4 py-2 border-b border-gray-700 text-sm text-gray-300 text-right">
                        {{ rowTotal }}
                      </td>
                    </tr>
                  {% endfor %}
                  {% if loop.last %}
                    <tr>
                      <td class="px-4 py-2 bg-gray-400 text-sm text-gray-900 font-semibold">
                        {{ 'Total visits'|t }}:
                      </td>
                      <td class="px-4 py-2 bg-gray-400 text-right text-sm text-gray-900 font-semibold">
                        {{ totalDailyVisits }}
                      </td>
                    </tr>
                  {% endif %}
                </tbody>
              </table>
            </div>
          {% endfor %}
        </div>

      </div>
    </div>

    {# — CHART.JS RENDERING — #}
    <script>
    const languageMap = {{ languageMap|json_encode|raw }};
    const dailyStats  = {{ lowercaseStats|json_encode|raw }};

    document.addEventListener('DOMContentLoaded', () => {
      

      const timeSlots = [];
      for (let h = 8; h <= 20; h++) {
        timeSlots.push(`${String(h).padStart(2,'0')}:00`);
        timeSlots.push(`${String(h).padStart(2,'0')}:30`);
      }

      let datasets = [];
      Object.entries(languageMap).forEach(([code, info]) => {
        const data = timeSlots.map(ts => dailyStats[ts]?.[code] ?? 0);
        if (data.some(v => v > 0)) {
          datasets.push({
            label: info.name,
            backgroundColor: info.hex,
            data
          });
        }
      });

      const ctx = document.getElementById('barDayChart').getContext('2d');
      new Chart(ctx, {
        type: 'bar',
        data: { labels: timeSlots, datasets },
        options: {
          scales: {
            x: { stacked: true, ticks: { color: 'white' } },
            y: { stacked: true, ticks: { color: 'white' } }
          },
          plugins: {
            legend: {
              display: datasets.length > 1,
              position: 'bottom',
              labels: { color: 'white' }
            }
          }
        }
      });
    });


    </script>

{% endblock %}
