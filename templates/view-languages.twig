{% cache %}
{% extends 'includes/main.twig' %}
{% endcache %}

{% block content %}

{% if not currentUser %}
    {% redirect 'index' %}
{% endif %}

{% set selectedUserId = currentUser.id %}

{% if selectedUserId %}
    {% do craft.app.session.set('selectedUserId', selectedUserId) %}
    {% set selectedUser = craft.users().id(selectedUserId).one() %}
    {% if selectedUser %}
        {% set selectedCompany = selectedUser.getFieldValue('companyName') %}
        {% set totalEntries = craft.emstats.getTotalVisitsCount(selectedUserId) %}
        {% set totalVisitsPerLanguage = craft.emstats.getTotalVisitsPerLanguage(selectedUserId) %}
    {% endif %}
{% endif %}

{% set languageMap = craft.emstats.getLanguageMap %}
{% set languages = languageMap|keys %}

<div class="flex min-h-screen">

    <div class="flex-grow w-full bg-grey-500 p-4">
        <div class="row-span-1">
            <h1 class="text-xl font-bold mb-2 text-white">
                {{ 'Visits by language'|t }}
            </h1>
        </div>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="p-4 bg-gray-800 text-white border border-gray-700 rounded-lg shadow-2xl">
                <div class="grid grid-rows-1 gap-4">
                    <div class="overflow-x-auto">
                        <table class="min-w-full bg-gray-800 border border-gray-700">
                            <thead>
                                <tr>
                                    <th class="w-2/3 px-4 py-2 border-b border-gray-700 bg-gray-700 text-left text-sm font-medium text-gray-300 uppercase tracking-wider">{{ 'Language'|t }}</th>
                                    <th class="w-1/3 px-4 py-2 border-b border-gray-700 bg-gray-700 text-right text-sm font-medium text-gray-300 uppercase tracking-wider">{{ 'Visits'|t }}</th>
                                </tr>
                            </thead>
                            <tbody>
                                {% for code, total in totalVisitsPerLanguage %}
                                {% set languageName = languageMap[code].name ?? code %}
                                <tr class="{{ loop.index0 is even ? 'bg-gray-800' : 'bg-gray-700' }}">
                                    <td class="w-2/3 px-4 py-2 border-b border-gray-700 text-sm text-gray-300">{{ total.language }}</td>
                                    <td class="w-1/3 px-4 py-2 border-b border-gray-700 text-sm text-right text-gray-300">{{ total.count }}</td>
                                </tr>
                                {% endfor %}
                                <tr>
                                    <td class="w-2/3 px-4 py-2 border-b border-gray-700 text-sm text-gray-900 bg-gray-400">{{ 'Total visits'|t }}:</td>
                                    <td class="w-1/3 px-4 py-2 border-t text-right border-gray-700 text-sm text-gray-900 bg-gray-400">{{ totalEntries }}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <div class="p-4 border rounded-lg shadow-2xl col-span-1 border-gray-700 sm:p-6 bg-gray-800 text-white">
                <div class="flex">
                        <canvas id="languagePieChart"></canvas>
                </div>
            </div>
        </div>
        
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const languageMap = {{ languageMap|json_encode|raw }};
    if (typeof languageMap === 'undefined') {
        console.error('languageMap is not defined');
        return;
    }

    var totalVisitsPerLanguage = {{ totalVisitsPerLanguage is not null ? totalVisitsPerLanguage|json_encode|raw : 'null' }};
    if (typeof totalVisitsPerLanguage !== 'undefined') {
        const labels = [];
        const data = [];
        const colors = [];

        Object.keys(totalVisitsPerLanguage).forEach(code => {
            if (languageMap[code]) {
                labels.push(languageMap[code].name);
                data.push(totalVisitsPerLanguage[code]);
                colors.push(languageMap[code].hex);
            } else {
                console.error('Language code ' + code + ' does not exist in languageMap');
            }
        });

        const pieCtx = document.getElementById('languagePieChart').getContext('2d');
        new Chart(pieCtx, {
            type: 'doughnut',
            data: {
                labels: labels,
                datasets: [{ data: data, backgroundColor: colors, borderWidth: 0 }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'bottom',
                        labels: {
                            color: 'white' // Change legend labels color to white
                        }
                    },
                },
                cutout: '50%'
            }
        });
    } else {
        console.log("totalVisitsPerLanguage is not defined");
    }
});
</script>

{% endblock %}
